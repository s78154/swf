/**
 * generated by Xtext 2.13.0
 */
package beleg.s78154S78236.impl;

import beleg.s78154S78236.EFolge;
import beleg.s78154S78236.EList;
import beleg.s78154S78236.NonEmptyList;
import beleg.s78154S78236.S78154S78236Package;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Non Empty List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link beleg.s78154S78236.impl.NonEmptyListImpl#getEfolge <em>Efolge</em>}</li>
 *   <li>{@link beleg.s78154S78236.impl.NonEmptyListImpl#getElist <em>Elist</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class NonEmptyListImpl extends MinimalEObjectImpl.Container implements NonEmptyList
{
  /**
   * The cached value of the '{@link #getEfolge() <em>Efolge</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEfolge()
   * @generated
   * @ordered
   */
  protected EFolge efolge;

  /**
   * The cached value of the '{@link #getElist() <em>Elist</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElist()
   * @generated
   * @ordered
   */
  protected EList elist;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NonEmptyListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return S78154S78236Package.Literals.NON_EMPTY_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EFolge getEfolge()
  {
    return efolge;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEfolge(EFolge newEfolge, NotificationChain msgs)
  {
    EFolge oldEfolge = efolge;
    efolge = newEfolge;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, S78154S78236Package.NON_EMPTY_LIST__EFOLGE, oldEfolge, newEfolge);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setEfolge(EFolge newEfolge)
  {
    if (newEfolge != efolge)
    {
      NotificationChain msgs = null;
      if (efolge != null)
        msgs = ((InternalEObject)efolge).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - S78154S78236Package.NON_EMPTY_LIST__EFOLGE, null, msgs);
      if (newEfolge != null)
        msgs = ((InternalEObject)newEfolge).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - S78154S78236Package.NON_EMPTY_LIST__EFOLGE, null, msgs);
      msgs = basicSetEfolge(newEfolge, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, S78154S78236Package.NON_EMPTY_LIST__EFOLGE, newEfolge, newEfolge));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList getElist()
  {
    return elist;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElist(EList newElist, NotificationChain msgs)
  {
    EList oldElist = elist;
    elist = newElist;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, S78154S78236Package.NON_EMPTY_LIST__ELIST, oldElist, newElist);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setElist(EList newElist)
  {
    if (newElist != elist)
    {
      NotificationChain msgs = null;
      if (elist != null)
        msgs = ((InternalEObject)elist).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - S78154S78236Package.NON_EMPTY_LIST__ELIST, null, msgs);
      if (newElist != null)
        msgs = ((InternalEObject)newElist).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - S78154S78236Package.NON_EMPTY_LIST__ELIST, null, msgs);
      msgs = basicSetElist(newElist, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, S78154S78236Package.NON_EMPTY_LIST__ELIST, newElist, newElist));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case S78154S78236Package.NON_EMPTY_LIST__EFOLGE:
        return basicSetEfolge(null, msgs);
      case S78154S78236Package.NON_EMPTY_LIST__ELIST:
        return basicSetElist(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case S78154S78236Package.NON_EMPTY_LIST__EFOLGE:
        return getEfolge();
      case S78154S78236Package.NON_EMPTY_LIST__ELIST:
        return getElist();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case S78154S78236Package.NON_EMPTY_LIST__EFOLGE:
        setEfolge((EFolge)newValue);
        return;
      case S78154S78236Package.NON_EMPTY_LIST__ELIST:
        setElist((EList)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case S78154S78236Package.NON_EMPTY_LIST__EFOLGE:
        setEfolge((EFolge)null);
        return;
      case S78154S78236Package.NON_EMPTY_LIST__ELIST:
        setElist((EList)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case S78154S78236Package.NON_EMPTY_LIST__EFOLGE:
        return efolge != null;
      case S78154S78236Package.NON_EMPTY_LIST__ELIST:
        return elist != null;
    }
    return super.eIsSet(featureID);
  }

} //NonEmptyListImpl
